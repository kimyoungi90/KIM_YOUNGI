#include "stdafx.h"
#include "blockinfo.h"

blockinfo::blockinfo(void)
{
	//type = rand() % 7;
}

int blockinfo::getColor(int num)
{
	if(num<0) num *= (-1);
	return num - 9;
}

int blockinfo::getblock_x() const
{
	return block_x;
}

int blockinfo::getblock_y() const
{
	return block_y;
}

void blockinfo::setblock_x(int x)
{
	block_x = x;
}

void blockinfo::setblock_y(int y)
{
	block_y = y;
}

const int blockinfo::blockModel[7][4][4][4] =
{
	{ 
		/* 

		бсбс
		бсбс      */

		{	0, 0, 0, 0,
			0, 1, 1, 0,
			0, 1, 1, 0,
			0, 0, 0, 0 },

		{	0, 0, 0, 0,
			0, 1, 1, 0,
			0, 1, 1, 0,
			0, 0, 0, 0 }, 

		{	0, 0, 0, 0,
			0, 1, 1, 0,
			0, 1, 1, 0,
			0, 0, 0, 0 },

		{	0, 0, 0, 0,
			0, 1, 1, 0,
			0, 1, 1, 0,
			0, 0, 0, 0 } },

	{
		/*

		бсбсбсбс   */

		{	0, 0, 0, 0,
			0, 0, 0, 0,
			1, 1, 1, 1,
			0, 0, 0, 0 }, 

		{	0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0 },

		{	0, 0, 0, 0,
			0, 0, 0, 0,
			1, 1, 1, 1,
			0, 0, 0, 0 },

		{	0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0 } },

	{
		 /*  
      
          бсбс
            бсбс    */
		{	0, 0, 0, 0,
			1, 1, 0, 0,
			0, 1, 1, 0,
			0, 0, 0, 0 },

		{	0, 0, 0, 0,
			0, 0, 1, 0,
			0, 1, 1, 0,
			0, 1, 0, 0 }, 

		{	0, 0, 0, 0,
			1, 1, 0, 0,
			0, 1, 1, 0,
			0, 0, 0, 0 }, 

		{	0, 0, 0, 0,
			0, 0, 1, 0,
			0, 1, 1, 0,
			0, 1, 0, 0 } },

	{
		 /*        
            бсбс
          бсбс      */
		{	0, 0, 0, 0,
			0, 1, 1, 0,
			1, 1, 0, 0,
			0, 0, 0, 0 }, 

		{	0, 0, 0, 0,
			1, 0, 0, 0,
			1, 1, 0, 0,
			0, 1, 0, 0 },

		{	0, 0, 0, 0,
			0, 1, 1, 0,
			1, 1, 0, 0,
			0, 0, 0, 0 }, 

		{	0, 0, 0, 0,
			1, 0, 0, 0,
			1, 1, 0, 0,
			0, 1, 0, 0 } },

	{
		 /*  
             бс
         бсбсбс     */
		{	0, 0, 0, 0,
			0, 0, 1, 0,
			1, 1, 1, 0,
			0, 0, 0, 0 },

		{	0, 0, 0, 0,
			1, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0 },

		{	0, 0, 0, 0,
			0, 0, 0, 0,
			1, 1, 1, 0,
			1, 0, 0, 0 },

		{	0, 0, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 1, 0 } },

	{
		/*
		бс
		бсбсбс     */
		{	0, 0, 0, 0,
			1, 0, 0, 0,
			1, 1, 1, 0,
			0, 0, 0, 0 }, 

		{	0, 0, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0,
			1, 1, 0, 0 },

		{	0, 0, 0, 0,
			0, 0, 0, 0,
			1, 1, 1, 0,
			0, 0, 1, 0 },

		{	0, 0, 0, 0,
			0, 1, 1, 0,
			0, 1, 0, 0,
			0, 1, 0, 0 } },

	{
		/* 
            бс
          бсбсбс    */
		{	0, 0, 0, 0,
			0, 1, 0, 0,
			1, 1, 1, 0,
			0, 0, 0, 0 },

		{	0, 0, 0, 0,
			0, 1, 0, 0,
			0, 1, 1, 0,
			0, 1, 0, 0 },

		{	0, 0, 0, 0,
			0, 0, 0, 0,
			1, 1, 1, 0,
			0, 1, 0, 0 },

		{	0, 0, 0, 0,
			0, 1, 0, 0,
			1, 1, 0, 0,
			0, 1, 0, 0 } }
};